#spring.application.name=wealthwise
#
#
## MongoDB
#spring.data.mongodb.uri=mongodb+srv://jaymehta2189:jaymehta24@cluster0.ozmvbup.mongodb.net/spending_service
#
## Kafka Producer
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#
## Kafka Consumer
#spring.kafka.consumer.group-id=spending-group
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.user.model
#
## Logging
##logging.level.org.springframework=INFO
##logging.level.com.example.spending=DEBUG


# App Name
spring.application.name=wealthwise
server.port=8082
# MongoDB Atlas connection
spring.data.mongodb.uri=mongodb+srv://jaymehta2189:jaymehta24@cluster0.ozmvbup.mongodb.net/spend_analysis2

# Kafka Config
spring.kafka.bootstrap-servers=localhost:9092

## Producer Config
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#
## Consumer Config
#spring.kafka.consumer.group-id=spending-group
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=org.example.DTO,com.spendingservice.wealthwise.model.CategoricalSpend,com.spendingservice.wealthwise.dto.UserSpendingDTO,com.spendingservice.wealthwise.dto.TransactionDTO,com.spendingservice.wealthwise.dto.CategoricalSpendDTO,com.spendingservice.wealthwise.dto.SpendingTrendDTO
#
## (Optional) Logging
## logging.level.org.springframework=INFO
## logging.level.com.example.spending=DEBUG

# --------------------------------------------------------
# Producer (only needed if you also publish from this service)
# --------------------------------------------------------
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# --------------------------------------------------------
# Consumer: Wrap in ErrorHandlingDeserializer
# --------------------------------------------------------
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegate to the actual deserializers
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# --------------------------------------------------------
# JSON Deserializer Settings
# --------------------------------------------------------
# Trust only your DTO packages to avoid security exceptions
spring.kafka.consumer.properties.spring.json.trusted.packages=com.spendingservice.wealthwise.dto

# Provide a fallback default type when no __TypeId__ header is present:
# We?ll use TransactionDTO for the user-transaction-topic listener
spring.kafka.consumer.properties.spring.json.value.default.type=com.spendingservice.wealthwise.dto.TransactionDTO

# If you need a different default for user-spending-topic,
# you can override in a dedicated container factory (Java config).

# --------------------------------------------------------
# Consumer Group & Offset
# --------------------------------------------------------
spring.kafka.consumer.group-id=spending-group
spring.kafka.consumer.auto-offset-reset=earliest

# --------------------------------------------------------
# Spring Kafka Streams (if used)
# --------------------------------------------------------
spring.kafka.streams.application-id=spending-service-streams
spring.kafka.streams.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.default.value.serde=org.springframework.kafka.support.serializer.JsonSerde

# --------------------------------------------------------
# Logging (optional)
# --------------------------------------------------------
# logging.level.org.springframework.kafka=INFO
# logging.level.com.spendingservice.wealthwise=DEBUG